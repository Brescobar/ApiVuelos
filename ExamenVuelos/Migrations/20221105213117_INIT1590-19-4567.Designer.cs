// <auto-generated />
using System;
using ExamenVuelos.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ExamenVuelos.Migrations
{
    [DbContext(typeof(BOEB1590194567))]
    [Migration("20221105213117_INIT1590-19-4567")]
    partial class INIT1590194567
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ExamenVuelos.Entities.Avion", b =>
                {
                    b.Property<int>("IdAvion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAvion"), 1L, 1);

                    b.Property<string>("Dimension")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdAvion");

                    b.ToTable("Avion");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Destino", b =>
                {
                    b.Property<int>("IdDestino")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDestino"), 1L, 1);

                    b.Property<string>("NombreDestino")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdDestino");

                    b.ToTable("Destino");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Piloto", b =>
                {
                    b.Property<int>("IdPiloto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPiloto"), 1L, 1);

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nacionalidad")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("IdPiloto");

                    b.ToTable("Piloto");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Voleto", b =>
                {
                    b.Property<int>("IdVoleto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVoleto"), 1L, 1);

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("Fecha")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("NombrePasajero")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<double?>("Tarifa")
                        .IsRequired()
                        .HasColumnType("float");

                    b.HasKey("IdVoleto");

                    b.HasIndex("DestinoId");

                    b.ToTable("Voleto");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Vuelo", b =>
                {
                    b.Property<int>("IdVuelo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdVuelo"), 1L, 1);

                    b.Property<int>("AvionId")
                        .HasColumnType("int");

                    b.Property<int>("DestinoId")
                        .HasColumnType("int");

                    b.Property<int>("PilotoId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("horaFechaLlegada")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("horaFechaSalida")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("IdVuelo");

                    b.HasIndex("AvionId")
                        .IsUnique();

                    b.HasIndex("DestinoId")
                        .IsUnique();

                    b.HasIndex("PilotoId")
                        .IsUnique();

                    b.ToTable("Vuelo");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Voleto", b =>
                {
                    b.HasOne("ExamenVuelos.Entities.Destino", "Destino")
                        .WithMany("Voletos")
                        .HasForeignKey("DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Destino");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Vuelo", b =>
                {
                    b.HasOne("ExamenVuelos.Entities.Avion", "Avion")
                        .WithOne("Vuelo")
                        .HasForeignKey("ExamenVuelos.Entities.Vuelo", "AvionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamenVuelos.Entities.Destino", "Destino")
                        .WithOne("Vuelo")
                        .HasForeignKey("ExamenVuelos.Entities.Vuelo", "DestinoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ExamenVuelos.Entities.Piloto", "Piloto")
                        .WithOne("Vuelo")
                        .HasForeignKey("ExamenVuelos.Entities.Vuelo", "PilotoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Avion");

                    b.Navigation("Destino");

                    b.Navigation("Piloto");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Avion", b =>
                {
                    b.Navigation("Vuelo");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Destino", b =>
                {
                    b.Navigation("Voletos");

                    b.Navigation("Vuelo");
                });

            modelBuilder.Entity("ExamenVuelos.Entities.Piloto", b =>
                {
                    b.Navigation("Vuelo");
                });
#pragma warning restore 612, 618
        }
    }
}
